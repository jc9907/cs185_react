{"ast":null,"code":"var _jsxFileName = \"/Users/Jiachen/Documents/cs185/cs185/src/pages/Images.jsx\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport image1 from \"../resources/image1.JPG\";\nimport image2 from \"../resources/image3.JPG\";\nimport image3 from \"../resources/image4.jpg\";\nimport image4 from \"../resources/image6.JPG\";\nimport image5 from \"../resources/image7.JPG\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  titleBar: {\n    background: \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" + \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\nconst tileData = [{\n  img: image1,\n  title: \"Image1\",\n  author: \"author\",\n  featured: true\n}, {\n  img: image2,\n  title: \"Image2\",\n  author: \"author\",\n  featured: true\n}, {\n  img: image3,\n  title: \"Image3\",\n  author: \"author\",\n  featured: true\n}, {\n  img: image4,\n  title: \"Image4\",\n  author: \"author\",\n  featured: true\n}, {\n  img: image5,\n  title: \"Image5\",\n  author: \"author\",\n  featured: true\n}];\nexport default function Images() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 240,\n    spacing: 1,\n    cols: 3,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, tileData.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile.img,\n    cols: tile.featured ? 2 : 1,\n    rows: tile.featured ? 2 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: tile.title,\n    titlePosition: \"bottom\",\n    actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": `star ${tile.title}`,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullscreenIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    })),\n    actionPosition: \"left\",\n    className: classes.titleBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/Jiachen/Documents/cs185/cs185/src/pages/Images.jsx"],"names":["React","Component","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","FullscreenIcon","image1","image2","image3","image4","image5","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","transform","titleBar","icon","color","tileData","img","title","author","featured","Images","classes","map","tile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\n\nimport image1 from \"../resources/image1.JPG\";\nimport image2 from \"../resources/image3.JPG\";\nimport image3 from \"../resources/image4.jpg\";\nimport image4 from \"../resources/image6.JPG\";\nimport image5 from \"../resources/image7.JPG\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n  icon: {\n    color: \"white\",\n  },\n}));\nconst tileData = [\n  { img: image1, title: \"Image1\", author: \"author\", featured: true },\n  { img: image2, title: \"Image2\", author: \"author\", featured: true },\n  { img: image3, title: \"Image3\", author: \"author\", featured: true },\n  { img: image4, title: \"Image4\", author: \"author\", featured: true },\n  { img: image5, title: \"Image5\", author: \"author\", featured: true },\n];\nexport default function Images() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={240}\n        spacing={1}\n        cols={3}\n        className={classes.gridList}\n      >\n        {tileData.map((tile) => (\n          <GridListTile\n            key={tile.img}\n            cols={tile.featured ? 2 : 1}\n            rows={tile.featured ? 2 : 1}\n          >\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"bottom\"\n              actionIcon={\n                <IconButton\n                  aria-label={`star ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <FullscreenIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}