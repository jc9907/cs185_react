{"ast":null,"code":"var _jsxFileName = \"/Users/Jiachen/Documents/cs185_react/src/pages/GuestBook.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 720,\n    \"margin-left\": \"35%\"\n  },\n  header: {\n    \"margin-left\": \"40%\",\n    \"margin-top\": \"3%\"\n  },\n  button: {\n    \"margin-top\": \"3%\",\n    \"margin-left\": \"3%\"\n  },\n  chip: {\n    margin: \"5px\"\n  },\n  gridList: {\n    height: 500,\n    transform: \"translateZ(0)\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  comp: props => ({\n    background: props.backgroundColor\n  })\n}));\n\nfunction validate(v) {\n  return v != null;\n}\n\nexport default function GuestBook() {\n  const classes = useStyles();\n  const [name, setName] = React.useState(null);\n  const [description, setDescription] = React.useState(null);\n  const [message, setMessage] = React.useState(null);\n  const [viewable, setViewable] = React.useState(false);\n  const [contact, setContact] = React.useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Welcome to my page, \\xA0leave a message!\"), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: !validate(name),\n    id: \"name\",\n    label: \"\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"What's your name?(required)\"))), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: !validate(description),\n    id: \"description\",\n    label: \"\",\n    value: description,\n    onChange: event => setDescription(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Tell me something about yourself!\"))), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: !validate(name),\n    id: \"message\",\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    margin: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Do you want your message to be public?\"))), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    value: viewable,\n    onChange: event => setViewable(event.target.value),\n    inputProps: {\n      name: \"age\",\n      id: \"age-native-helper\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"No\")), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Do you want your message to be public?\"))), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    label: \"\",\n    value: contact,\n    onChange: event => setContact(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"What's your email?(won't be posted)\")))));\n}","map":{"version":3,"sources":["/Users/Jiachen/Documents/cs185_react/src/pages/GuestBook.jsx"],"names":["React","useState","makeStyles","Chip","Snackbar","List","ListItem","GridList","Button","TextField","GridListTile","InputLabel","FormHelperText","FormControl","Select","NativeSelect","useStyles","theme","root","width","maxWidth","header","button","chip","margin","gridList","height","transform","formControl","spacing","minWidth","selectEmpty","marginTop","comp","props","background","backgroundColor","validate","v","GuestBook","classes","name","setName","description","setDescription","message","setMessage","viewable","setViewable","contact","setContact","event","target","value","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 720,\n    \"margin-left\": \"35%\",\n  },\n  header: {\n    \"margin-left\": \"40%\",\n    \"margin-top\": \"3%\",\n  },\n  button: {\n    \"margin-top\": \"3%\",\n    \"margin-left\": \"3%\",\n  },\n  chip: {\n    margin: \"5px\",\n  },\n  gridList: {\n    height: 500,\n    transform: \"translateZ(0)\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  comp: (props) => ({\n    background: props.backgroundColor,\n  }),\n}));\n\nfunction validate(v) {\n  return v != null;\n}\n\nexport default function GuestBook() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(null);\n  const [description, setDescription] = React.useState(null);\n  const [message, setMessage] = React.useState(null);\n  const [viewable, setViewable] = React.useState(false);\n  const [contact, setContact] = React.useState(null);\n\n  return (\n    <div>\n      <h1>Welcome to my page, &nbsp;leave a message!</h1>\n      <List className={classes.root}>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <TextField\n              error={!validate(name)}\n              id=\"name\"\n              label=\"\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <FormHelperText>What's your name?(required)</FormHelperText>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <TextField\n              error={!validate(description)}\n              id=\"description\"\n              label=\"\"\n              value={description}\n              onChange={(event) => setDescription(event.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <FormHelperText>Tell me something about yourself!</FormHelperText>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <TextField\n              error={!validate(name)}\n              id=\"message\"\n              value={message}\n              onChange={(event) => setMessage(event.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <FormHelperText margin=\"dense\">\n              Do you want your message to be public?\n            </FormHelperText>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <NativeSelect\n              value={viewable}\n              onChange={(event) => setViewable(event.target.value)}\n              inputProps={{\n                name: \"age\",\n                id: \"age-native-helper\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={true}>Yes</option>\n              <option value={false}>No</option>\n            </NativeSelect>\n            <FormHelperText>\n              Do you want your message to be public?\n            </FormHelperText>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <TextField\n              id=\"email\"\n              label=\"\"\n              value={contact}\n              onChange={(event) => setContact(event.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <FormHelperText>What's your email?(won't be posted)</FormHelperText>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}