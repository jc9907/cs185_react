{"ast":null,"code":"var _jsxFileName = \"/Users/Jiachen/Documents/cs185_react/src/pages/GuestBook.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 720,\n    \"margin-left\": \"35%\"\n  },\n  header: {\n    \"margin-left\": \"40%\",\n    \"margin-top\": \"3%\"\n  },\n  button: {\n    \"margin-top\": \"3%\",\n    \"margin-left\": \"3%\"\n  },\n  chip: {\n    margin: \"5px\"\n  },\n  gridList: {\n    height: 500,\n    transform: \"translateZ(0)\"\n  },\n  comp: props => ({\n    background: props.backgroundColor\n  })\n}));\nexport default function GuestBook() {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"testname\");\n  const [description, setDescription] = React.useState(\"testdes\");\n  const [message, setMessage] = React.useState(\"testmess\");\n  const [viewable, setViewable] = React.useState(false);\n  const [contact, setContact] = React.useState(\"testcont\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    label: \"What's your name?\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"say something about yourself!\",\n    value: description,\n    onChange: event => setDescription(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    label: \"What's your name?\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    label: \"What's your name?\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/Jiachen/Documents/cs185_react/src/pages/GuestBook.jsx"],"names":["React","useState","makeStyles","Chip","Snackbar","List","ListItem","GridList","Button","TextField","GridListTile","useStyles","theme","root","width","maxWidth","header","button","chip","margin","gridList","height","transform","comp","props","background","backgroundColor","GuestBook","classes","name","setName","description","setDescription","message","setMessage","viewable","setViewable","contact","setContact","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 720,\n    \"margin-left\": \"35%\",\n  },\n  header: {\n    \"margin-left\": \"40%\",\n    \"margin-top\": \"3%\",\n  },\n  button: {\n    \"margin-top\": \"3%\",\n    \"margin-left\": \"3%\",\n  },\n  chip: {\n    margin: \"5px\",\n  },\n  gridList: {\n    height: 500,\n    transform: \"translateZ(0)\",\n  },\n  comp: (props) => ({\n    background: props.backgroundColor,\n  }),\n}));\n\nexport default function GuestBook() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"testname\");\n  const [description, setDescription] = React.useState(\"testdes\");\n  const [message, setMessage] = React.useState(\"testmess\");\n  const [viewable, setViewable] = React.useState(false);\n  const [contact, setContact] = React.useState(\"testcont\");\n\n  return (\n    <div>\n      <List className={classes.root}>\n        <ListItem>\n          <TextField\n            id=\"name\"\n            label=\"What's your name?\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"description\"\n            label=\"say something about yourself!\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"name\"\n            label=\"What's your name?\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"name\"\n            label=\"What's your name?\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}